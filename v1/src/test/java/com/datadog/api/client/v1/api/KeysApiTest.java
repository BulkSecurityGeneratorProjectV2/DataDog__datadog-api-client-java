/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.client.v1.api;

import com.datadog.api.client.v1.ApiException;
import com.datadog.api.client.v1.model.CreateAndEditBody;
import com.datadog.api.client.v1.model.Error400;
import com.datadog.api.client.v1.model.Error403;
import com.datadog.api.client.v1.model.Error404;
import com.datadog.api.client.v1.model.Error409;
import com.datadog.api.client.v1.model.InlineResponse200;
import com.datadog.api.client.v1.model.InlineResponse2001;
import com.datadog.api.client.v1.model.InlineResponse2002;
import com.datadog.api.client.v1.model.InlineResponse2003;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KeysApi
 */
@Ignore
public class KeysApiTest {

    private final KeysApi api = new KeysApi();

    
    /**
     * Create an API key with a given name.
     *
     * ## Overview Creates an API key ### ARGUMENTS * **&#x60;name&#x60;** [*required*]: Name of your API key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAPIKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        CreateAndEditBody createAndEditBody = null;
        InlineResponse2001 response = api.createAPIKey(apiKey, applicationKey, createAndEditBody);

        // TODO: test validations
    }
    
    /**
     * Create an application key with a given name.
     *
     * ## Overview Create an application key with a given name. ### ARGUMENTS * **&#x60;name&#x60;** [*required*]: Name of your application key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createApplicationKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        CreateAndEditBody createAndEditBody = null;
        InlineResponse2003 response = api.createApplicationKey(apiKey, applicationKey, createAndEditBody);

        // TODO: test validations
    }
    
    /**
     * Delete a given API key.
     *
     * ## Overview Delete a given API key. ### ARGUMENTS This endpoint takes no JSON arguments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAPIKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        String apiKey2 = null;
        InlineResponse2001 response = api.deleteAPIKey(apiKey, applicationKey, apiKey2);

        // TODO: test validations
    }
    
    /**
     * Delete a given application key.
     *
     * ## Overview Delete a given application key. ### ARGUMENTS * **&#x60;name&#x60;** [*required*]: Name of your application key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteApplicationKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        String appKey = null;
        InlineResponse2003 response = api.deleteApplicationKey(apiKey, applicationKey, appKey);

        // TODO: test validations
    }
    
    /**
     * Edit an API key name.
     *
     * ## Overview Edit an API key name. ### ARGUMENTS * **&#x60;name&#x60;** [*required*]: Name of your API key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editAPIKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        String apiKey2 = null;
        CreateAndEditBody createAndEditBody = null;
        InlineResponse2001 response = api.editAPIKey(apiKey, applicationKey, apiKey2, createAndEditBody);

        // TODO: test validations
    }
    
    /**
     * Edit an application key name.
     *
     * ## Overview Edit an application key name. ### ARGUMENTS * **&#x60;name&#x60;** [*required*]: Name of your application key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editApplicationKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        String appKey = null;
        CreateAndEditBody createAndEditBody = null;
        InlineResponse2003 response = api.editApplicationKey(apiKey, applicationKey, appKey, createAndEditBody);

        // TODO: test validations
    }
    
    /**
     * Get a given API key.
     *
     * ## Overview Get a given API key. ### ARGUMENTS This endpoint takes no JSON arguments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAPIKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        String apiKey2 = null;
        InlineResponse2001 response = api.getAPIKey(apiKey, applicationKey, apiKey2);

        // TODO: test validations
    }
    
    /**
     * Get all API keys available for your account.
     *
     * ## Overview Get all API keys available for your account. ### ARGUMENTS This endpoint takes no JSON arguments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllAPIKeysTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        InlineResponse200 response = api.getAllAPIKeys(apiKey, applicationKey);

        // TODO: test validations
    }
    
    /**
     * Get all application keys available for your account.
     *
     * ## Overview Get all application keys available for your account. ### ARGUMENTS This endpoint takes no JSON arguments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllApplicationKeysTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        InlineResponse2002 response = api.getAllApplicationKeys(apiKey, applicationKey);

        // TODO: test validations
    }
    
    /**
     * Get a given application key.
     *
     * ## Overview Get a given application key. ### ARGUMENTS This endpoint takes no JSON arguments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApplicationKeyTest() throws ApiException {
        String apiKey = null;
        String applicationKey = null;
        String appKey = null;
        InlineResponse2003 response = api.getApplicationKey(apiKey, applicationKey, appKey);

        // TODO: test validations
    }
    
}
