/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.client.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.datadog.api.client.v1.model.MonitorThresholds;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * MonitorOptions
 */

public class MonitorOptions {
  public static final String SERIALIZED_NAME_AGGREGATION = "aggregation";
  @SerializedName(SERIALIZED_NAME_AGGREGATION)
  private String aggregation;

  /**
   * Gets or Sets deviceIds
   */
  @JsonAdapter(DeviceIdsEnum.Adapter.class)
  public enum DeviceIdsEnum {
    LAPTOP_LARGE("laptop_large"),
    
    TABLET("tablet"),
    
    MOBILE_SMALL("mobile_small");

    private String value;

    DeviceIdsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeviceIdsEnum fromValue(String value) {
      for (DeviceIdsEnum b : DeviceIdsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DeviceIdsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeviceIdsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeviceIdsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DeviceIdsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DEVICE_IDS = "device_ids";
  @SerializedName(SERIALIZED_NAME_DEVICE_IDS)
  private List<DeviceIdsEnum> deviceIds = new ArrayList<DeviceIdsEnum>();

  public static final String SERIALIZED_NAME_ENABLE_LOGS_SAMPLE = "enable_logs_sample";
  @SerializedName(SERIALIZED_NAME_ENABLE_LOGS_SAMPLE)
  private Boolean enableLogsSample;

  public static final String SERIALIZED_NAME_ESCALATION_MESSAGE = "escalation_message";
  @SerializedName(SERIALIZED_NAME_ESCALATION_MESSAGE)
  private String escalationMessage;

  public static final String SERIALIZED_NAME_EVALUATION_DELAY = "evaluation_delay";
  @SerializedName(SERIALIZED_NAME_EVALUATION_DELAY)
  private Long evaluationDelay;

  public static final String SERIALIZED_NAME_INCLUDE_TAGS = "include_tags";
  @SerializedName(SERIALIZED_NAME_INCLUDE_TAGS)
  private Boolean includeTags;

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked;

  public static final String SERIALIZED_NAME_MIN_FAILURE_DURATION = "min_failure_duration";
  @SerializedName(SERIALIZED_NAME_MIN_FAILURE_DURATION)
  private Long minFailureDuration;

  public static final String SERIALIZED_NAME_MIN_LOCATION_FAILED = "min_location_failed";
  @SerializedName(SERIALIZED_NAME_MIN_LOCATION_FAILED)
  private Long minLocationFailed;

  public static final String SERIALIZED_NAME_NEW_HOST_DELAY = "new_host_delay";
  @SerializedName(SERIALIZED_NAME_NEW_HOST_DELAY)
  private Long newHostDelay;

  public static final String SERIALIZED_NAME_NO_DATA_TIMEFRAME = "no_data_timeframe";
  @SerializedName(SERIALIZED_NAME_NO_DATA_TIMEFRAME)
  private Long noDataTimeframe;

  public static final String SERIALIZED_NAME_NOTIFY_AUDIT = "notify_audit";
  @SerializedName(SERIALIZED_NAME_NOTIFY_AUDIT)
  private Boolean notifyAudit;

  public static final String SERIALIZED_NAME_NOTIFY_NO_DATA = "notify_no_data";
  @SerializedName(SERIALIZED_NAME_NOTIFY_NO_DATA)
  private Boolean notifyNoData;

  public static final String SERIALIZED_NAME_RENOTIFY_INTERVAL = "renotify_interval";
  @SerializedName(SERIALIZED_NAME_RENOTIFY_INTERVAL)
  private Long renotifyInterval;

  public static final String SERIALIZED_NAME_REQUIRE_FULL_WINDOW = "require_full_window";
  @SerializedName(SERIALIZED_NAME_REQUIRE_FULL_WINDOW)
  private Boolean requireFullWindow;

  public static final String SERIALIZED_NAME_SILENCED = "silenced";
  @SerializedName(SERIALIZED_NAME_SILENCED)
  private Map<String, Long> silenced = new HashMap<String, Long>();

  public static final String SERIALIZED_NAME_SYNTHETICS_CHECK_ID = "synthetics_check_id";
  @SerializedName(SERIALIZED_NAME_SYNTHETICS_CHECK_ID)
  private Long syntheticsCheckId;

  public static final String SERIALIZED_NAME_THRESHOLDS = "thresholds";
  @SerializedName(SERIALIZED_NAME_THRESHOLDS)
  private MonitorThresholds thresholds = null;

  public static final String SERIALIZED_NAME_TIMEOUT_H = "timeout_h";
  @SerializedName(SERIALIZED_NAME_TIMEOUT_H)
  private Integer timeoutH;

  public MonitorOptions aggregation(String aggregation) {
    this.aggregation = aggregation;
    return this;
  }

   /**
   * Get aggregation
   * @return aggregation
  **/
  @ApiModelProperty(value = "")
  public String getAggregation() {
    return aggregation;
  }

  public void setAggregation(String aggregation) {
    this.aggregation = aggregation;
  }

  public MonitorOptions deviceIds(List<DeviceIdsEnum> deviceIds) {
    this.deviceIds = deviceIds;
    return this;
  }

  public MonitorOptions addDeviceIdsItem(DeviceIdsEnum deviceIdsItem) {
    if (this.deviceIds == null) {
      this.deviceIds = new ArrayList<DeviceIdsEnum>();
    }
    this.deviceIds.add(deviceIdsItem);
    return this;
  }

   /**
   * Get deviceIds
   * @return deviceIds
  **/
  @ApiModelProperty(value = "")
  public List<DeviceIdsEnum> getDeviceIds() {
    return deviceIds;
  }

  public void setDeviceIds(List<DeviceIdsEnum> deviceIds) {
    this.deviceIds = deviceIds;
  }

  public MonitorOptions enableLogsSample(Boolean enableLogsSample) {
    this.enableLogsSample = enableLogsSample;
    return this;
  }

   /**
   * Get enableLogsSample
   * @return enableLogsSample
  **/
  @ApiModelProperty(value = "")
  public Boolean getEnableLogsSample() {
    return enableLogsSample;
  }

  public void setEnableLogsSample(Boolean enableLogsSample) {
    this.enableLogsSample = enableLogsSample;
  }

  public MonitorOptions escalationMessage(String escalationMessage) {
    this.escalationMessage = escalationMessage;
    return this;
  }

   /**
   * Get escalationMessage
   * @return escalationMessage
  **/
  @ApiModelProperty(value = "")
  public String getEscalationMessage() {
    return escalationMessage;
  }

  public void setEscalationMessage(String escalationMessage) {
    this.escalationMessage = escalationMessage;
  }

  public MonitorOptions evaluationDelay(Long evaluationDelay) {
    this.evaluationDelay = evaluationDelay;
    return this;
  }

   /**
   * Get evaluationDelay
   * @return evaluationDelay
  **/
  @ApiModelProperty(value = "")
  public Long getEvaluationDelay() {
    return evaluationDelay;
  }

  public void setEvaluationDelay(Long evaluationDelay) {
    this.evaluationDelay = evaluationDelay;
  }

  public MonitorOptions includeTags(Boolean includeTags) {
    this.includeTags = includeTags;
    return this;
  }

   /**
   * Get includeTags
   * @return includeTags
  **/
  @ApiModelProperty(value = "")
  public Boolean getIncludeTags() {
    return includeTags;
  }

  public void setIncludeTags(Boolean includeTags) {
    this.includeTags = includeTags;
  }

  public MonitorOptions locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @ApiModelProperty(value = "")
  public Boolean getLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public MonitorOptions minFailureDuration(Long minFailureDuration) {
    this.minFailureDuration = minFailureDuration;
    return this;
  }

   /**
   * Get minFailureDuration
   * minimum: 0
   * maximum: 7200
   * @return minFailureDuration
  **/
  @ApiModelProperty(value = "")
  public Long getMinFailureDuration() {
    return minFailureDuration;
  }

  public void setMinFailureDuration(Long minFailureDuration) {
    this.minFailureDuration = minFailureDuration;
  }

  public MonitorOptions minLocationFailed(Long minLocationFailed) {
    this.minLocationFailed = minLocationFailed;
    return this;
  }

   /**
   * Get minLocationFailed
   * @return minLocationFailed
  **/
  @ApiModelProperty(value = "")
  public Long getMinLocationFailed() {
    return minLocationFailed;
  }

  public void setMinLocationFailed(Long minLocationFailed) {
    this.minLocationFailed = minLocationFailed;
  }

  public MonitorOptions newHostDelay(Long newHostDelay) {
    this.newHostDelay = newHostDelay;
    return this;
  }

   /**
   * Get newHostDelay
   * @return newHostDelay
  **/
  @ApiModelProperty(value = "")
  public Long getNewHostDelay() {
    return newHostDelay;
  }

  public void setNewHostDelay(Long newHostDelay) {
    this.newHostDelay = newHostDelay;
  }

  public MonitorOptions noDataTimeframe(Long noDataTimeframe) {
    this.noDataTimeframe = noDataTimeframe;
    return this;
  }

   /**
   * Get noDataTimeframe
   * @return noDataTimeframe
  **/
  @ApiModelProperty(value = "")
  public Long getNoDataTimeframe() {
    return noDataTimeframe;
  }

  public void setNoDataTimeframe(Long noDataTimeframe) {
    this.noDataTimeframe = noDataTimeframe;
  }

  public MonitorOptions notifyAudit(Boolean notifyAudit) {
    this.notifyAudit = notifyAudit;
    return this;
  }

   /**
   * Get notifyAudit
   * @return notifyAudit
  **/
  @ApiModelProperty(value = "")
  public Boolean getNotifyAudit() {
    return notifyAudit;
  }

  public void setNotifyAudit(Boolean notifyAudit) {
    this.notifyAudit = notifyAudit;
  }

  public MonitorOptions notifyNoData(Boolean notifyNoData) {
    this.notifyNoData = notifyNoData;
    return this;
  }

   /**
   * Get notifyNoData
   * @return notifyNoData
  **/
  @ApiModelProperty(value = "")
  public Boolean getNotifyNoData() {
    return notifyNoData;
  }

  public void setNotifyNoData(Boolean notifyNoData) {
    this.notifyNoData = notifyNoData;
  }

  public MonitorOptions renotifyInterval(Long renotifyInterval) {
    this.renotifyInterval = renotifyInterval;
    return this;
  }

   /**
   * Get renotifyInterval
   * @return renotifyInterval
  **/
  @ApiModelProperty(value = "")
  public Long getRenotifyInterval() {
    return renotifyInterval;
  }

  public void setRenotifyInterval(Long renotifyInterval) {
    this.renotifyInterval = renotifyInterval;
  }

  public MonitorOptions requireFullWindow(Boolean requireFullWindow) {
    this.requireFullWindow = requireFullWindow;
    return this;
  }

   /**
   * Get requireFullWindow
   * @return requireFullWindow
  **/
  @ApiModelProperty(value = "")
  public Boolean getRequireFullWindow() {
    return requireFullWindow;
  }

  public void setRequireFullWindow(Boolean requireFullWindow) {
    this.requireFullWindow = requireFullWindow;
  }

  public MonitorOptions silenced(Map<String, Long> silenced) {
    this.silenced = silenced;
    return this;
  }

  public MonitorOptions putSilencedItem(String key, Long silencedItem) {
    if (this.silenced == null) {
      this.silenced = new HashMap<String, Long>();
    }
    this.silenced.put(key, silencedItem);
    return this;
  }

   /**
   * Get silenced
   * @return silenced
  **/
  @ApiModelProperty(value = "")
  public Map<String, Long> getSilenced() {
    return silenced;
  }

  public void setSilenced(Map<String, Long> silenced) {
    this.silenced = silenced;
  }

  public MonitorOptions syntheticsCheckId(Long syntheticsCheckId) {
    this.syntheticsCheckId = syntheticsCheckId;
    return this;
  }

   /**
   * Get syntheticsCheckId
   * @return syntheticsCheckId
  **/
  @ApiModelProperty(value = "")
  public Long getSyntheticsCheckId() {
    return syntheticsCheckId;
  }

  public void setSyntheticsCheckId(Long syntheticsCheckId) {
    this.syntheticsCheckId = syntheticsCheckId;
  }

  public MonitorOptions thresholds(MonitorThresholds thresholds) {
    this.thresholds = thresholds;
    return this;
  }

   /**
   * Get thresholds
   * @return thresholds
  **/
  @ApiModelProperty(value = "")
  public MonitorThresholds getThresholds() {
    return thresholds;
  }

  public void setThresholds(MonitorThresholds thresholds) {
    this.thresholds = thresholds;
  }

  public MonitorOptions timeoutH(Integer timeoutH) {
    this.timeoutH = timeoutH;
    return this;
  }

   /**
   * Get timeoutH
   * @return timeoutH
  **/
  @ApiModelProperty(value = "")
  public Integer getTimeoutH() {
    return timeoutH;
  }

  public void setTimeoutH(Integer timeoutH) {
    this.timeoutH = timeoutH;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitorOptions monitorOptions = (MonitorOptions) o;
    return Objects.equals(this.aggregation, monitorOptions.aggregation) &&
        Objects.equals(this.deviceIds, monitorOptions.deviceIds) &&
        Objects.equals(this.enableLogsSample, monitorOptions.enableLogsSample) &&
        Objects.equals(this.escalationMessage, monitorOptions.escalationMessage) &&
        Objects.equals(this.evaluationDelay, monitorOptions.evaluationDelay) &&
        Objects.equals(this.includeTags, monitorOptions.includeTags) &&
        Objects.equals(this.locked, monitorOptions.locked) &&
        Objects.equals(this.minFailureDuration, monitorOptions.minFailureDuration) &&
        Objects.equals(this.minLocationFailed, monitorOptions.minLocationFailed) &&
        Objects.equals(this.newHostDelay, monitorOptions.newHostDelay) &&
        Objects.equals(this.noDataTimeframe, monitorOptions.noDataTimeframe) &&
        Objects.equals(this.notifyAudit, monitorOptions.notifyAudit) &&
        Objects.equals(this.notifyNoData, monitorOptions.notifyNoData) &&
        Objects.equals(this.renotifyInterval, monitorOptions.renotifyInterval) &&
        Objects.equals(this.requireFullWindow, monitorOptions.requireFullWindow) &&
        Objects.equals(this.silenced, monitorOptions.silenced) &&
        Objects.equals(this.syntheticsCheckId, monitorOptions.syntheticsCheckId) &&
        Objects.equals(this.thresholds, monitorOptions.thresholds) &&
        Objects.equals(this.timeoutH, monitorOptions.timeoutH);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregation, deviceIds, enableLogsSample, escalationMessage, evaluationDelay, includeTags, locked, minFailureDuration, minLocationFailed, newHostDelay, noDataTimeframe, notifyAudit, notifyNoData, renotifyInterval, requireFullWindow, silenced, syntheticsCheckId, thresholds, timeoutH);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitorOptions {\n");
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("    deviceIds: ").append(toIndentedString(deviceIds)).append("\n");
    sb.append("    enableLogsSample: ").append(toIndentedString(enableLogsSample)).append("\n");
    sb.append("    escalationMessage: ").append(toIndentedString(escalationMessage)).append("\n");
    sb.append("    evaluationDelay: ").append(toIndentedString(evaluationDelay)).append("\n");
    sb.append("    includeTags: ").append(toIndentedString(includeTags)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    minFailureDuration: ").append(toIndentedString(minFailureDuration)).append("\n");
    sb.append("    minLocationFailed: ").append(toIndentedString(minLocationFailed)).append("\n");
    sb.append("    newHostDelay: ").append(toIndentedString(newHostDelay)).append("\n");
    sb.append("    noDataTimeframe: ").append(toIndentedString(noDataTimeframe)).append("\n");
    sb.append("    notifyAudit: ").append(toIndentedString(notifyAudit)).append("\n");
    sb.append("    notifyNoData: ").append(toIndentedString(notifyNoData)).append("\n");
    sb.append("    renotifyInterval: ").append(toIndentedString(renotifyInterval)).append("\n");
    sb.append("    requireFullWindow: ").append(toIndentedString(requireFullWindow)).append("\n");
    sb.append("    silenced: ").append(toIndentedString(silenced)).append("\n");
    sb.append("    syntheticsCheckId: ").append(toIndentedString(syntheticsCheckId)).append("\n");
    sb.append("    thresholds: ").append(toIndentedString(thresholds)).append("\n");
    sb.append("    timeoutH: ").append(toIndentedString(timeoutH)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

